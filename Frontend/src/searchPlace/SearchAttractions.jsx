export const SearchAttractions = (userCoords, map, setAttractionsCoords) => {
    if (!userCoords || !map) return;

    console.log("üîé –ò—â–µ–º –±–ª–∏–∂–∞–π—à—É—é –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å...");

    map.controls.each((control) => {
        if (control instanceof window.ymaps.control.SearchControl) {
            map.controls.remove(control);
        }
    });
    
    const searchControl = new window.ymaps.control.SearchControl({
        options: { 
            provider: "yandex#search",
            results: 1,
            boundedBy: [
                [userCoords[0] - 0.01, userCoords[1] - 0.01],
                [userCoords[0] + 0.01, userCoords[1] + 0.01]
            ]
        },
    });

    map.controls.add(searchControl);

    searchControl.search("–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å").then(() => {
        const results = searchControl.getResultsArray();
        if (!results || results.length === 0) {
            console.warn("‚ùå –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
            return;
        }

        const nearestAttractionsCoordsCoords = results[0].geometry.getCoordinates();

        console.log("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –±–ª–∏–∂–∞–π—à–∞—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å", nearestAttractionsCoordsCoords);
        setAttractionsCoords(nearestAttractionsCoordsCoords);
    })
    .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', error)
    })
};